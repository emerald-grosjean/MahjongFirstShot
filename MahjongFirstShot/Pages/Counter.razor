@using MahjongFirstShot.Models
@using MahjongFirstShot.Utils

<div class="dora">
    <label>
        王牌:
    </label>

    <div class="tile-container">
        @for (int i = 1; i <= 2; i++)
        {
            <img src="images/tiles/ura-green.png" alt="ura-green" />
        }

        @{
            {
                var fileName = TileUtils.FileName(Dora());

                <img src="images/tiles/@(fileName).png" alt="@fileName" />
            }
        }

        @for (int i = 1; i <= 4; i++)
        {
            <img src="images/tiles/ura-green.png" alt="ura-green" />
        }
    </div>
</div>

<div class="hand">
    <label>
        手牌:
    </label>

    <div class="tile-container">
        @foreach (var tile in HandTiles())
        {
            var fileName = TileUtils.FileName(tile);

            <img src="images/tiles/@(fileName).png" alt="@fileName" />
        }
    </div>
</div>

<button class="btn btn-primary" @onclick="NewWall">Click me</button>

@code {
    private Wall Wall { get; set; } = null!;

    protected override void OnInitialized()
    {
        NewWall();
    }

    private void NewWall()
    {
        Wall = new Wall();
    }

    private IEnumerable<Tile> HandTiles()
    {
        return Wall.WallTileIds.Take(14).Order().Select(x => new Tile(x));
    }

    private Tile Dora()
    {
        var id = Wall.DeadWallTileIds.First();
        return new Tile(id);
    }
}
